services:

  tasks_api:
      build:
        context: .
        dockerfile: services/tasks_api/Dockerfile
      ports:
        - "8000:8000"
      depends_on:
        - postgres
      volumes:
        - ./config.yaml:/app/shared/config/config.yaml:ro

  envoy:
    image: envoyproxy/envoy:v1.32-latest
    container_name: envoy
    ports:
      - "8080:8080"   # external traffic
      - "9901:9901"   # admin interface
    volumes:
      - ./config/envoy.yaml:/etc/envoy/envoy.yaml:ro

  postgres:
    image: postgres
    container_name: postgres-dbs
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_MULTIPLE_DATABASES: postgres:agents,postgres:tasks,postgres:data,postgres:users
    volumes:
      - pg_dbs

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PSWD}
    volumes:
      - redis_data:/redis_data


volumes:
  pg_dbs:
  redis_data:
  minio-data: